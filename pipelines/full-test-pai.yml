trigger: none
pr: none
schedules:
- cron: 0 16 * * *
  branches:
    include: [ master ]

variables:
  reuse_mode: false

# variables set on VSO: (for security concern)
#   manager_ip
#   pai_token
#   docker_hub_password

jobs:
- job: pai
  pool: NNI CI PAI CLI
  timeoutInMinutes: 120

  steps:
  - script: |
      export TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
      echo "##vso[task.setvariable variable=TIMESTAMP]${TIMESTAMP}"
      echo "##vso[task.setvariable variable=PATH]${PATH}:${HOME}/.local/bin"
      echo "##vso[task.setvariable variable=NNI_RELEASE]999.${TIMESTAMP}"

      echo "working directory: ${PWD}"
      echo "timestamp: ${TIMESTAMP}"
      echo "build docker image: $(build_docker_image)"
    displayName: Prepare

  - script: |
      set -e
      python3 -m pip install -U --upgrade pip setuptools
      python3 setup.py build_ts
      python3 setup.py bdist_wheel -p manylinux1_x86_64
      python3 -m pip install -U dist/nni-${NNI_RELEASE}-py3-none-manylinux1_x86_64.whl
    displayName: Build and install NNI

  - script: |
      set -e
      sudo apt-get install swig -y
      nnictl package install --name=SMAC
      nnictl package install --name=BOHB
    displayName: Install extra tuners

  - script: |
      set -e
      cd examples/tuners/customized_tuner
      python3 setup.py develop --user
      nnictl package install .
    displayName: Install customized tuner

  - script: |
      set -e
      docker login -u nnidev -p $(docker_hub_password)

      echo 'Modify docker file to install NNI from local wheel'
      sed -ie 's/RUN python3 -m pip --no-cache-dir install nni/COPY dist\/* .\nRUN python3 -m pip install nni-*.whl/' Dockerfile
      cat Dockerfile

      echo 'Build docker image'
      docker build -f Dockerfile -t nnidev/nni-it-pai:latest .

      echo 'Upload docker image'
      docker push nnidev/nni-it-pai:latest
    condition: eq(variables['build_docker_image'], 'true')
    displayName: Build and upload docker image

  - script: |
      set -e
      cd test
      python3 nni_test/nnitest/generate_ts_config.py \
          --ts pai \
          --pai_reuse $(reuse_mode) \
          --pai_host https://ne.openpai.org \
          --pai_user zhliu1 \
          --nni_docker_image nnidev/nni-it-pai:latest \
          --pai_storage_config_name confignfs-data \
          --pai_token $(pai_token) \
          --nni_manager_nfs_mount_path /home/quzha/mnt-pai-ne/shinyang3 \
          --container_nfs_mount_path /mnt/confignfs-data/shinyang3 \
          --nni_manager_ip $(manager_ip) \
          --vc nni
      python3 nni_test/nnitest/run_tests.py --config config/integration_tests.yml --ts pai
    displayName: Integration test
